{
  "{\"sourceRoot\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"filename\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter/server/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"plugins\":[],\"presets\":[]}:7.1.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst db = require('../database/index.js');\n\nlet app = express();\napp.use(express.static(__dirname + '/../client/dist'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.post('/review', (req, res) => {\n  db.save(req.body);\n  res.send('data has been sent from server to database');\n});\nlet port = 3000;\napp.listen(process.env.PORT || port, function () {\n  console.log(`listening on port ${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keVBhcnNlciIsImRiIiwiYXBwIiwidXNlIiwic3RhdGljIiwiX19kaXJuYW1lIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInBvc3QiLCJyZXEiLCJyZXMiLCJzYXZlIiwiYm9keSIsInNlbmQiLCJwb3J0IiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsc0JBQUQsQ0FBbEI7O0FBRUEsSUFBSUcsR0FBRyxHQUFHSixPQUFPLEVBQWpCO0FBRUFJLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUMsU0FBUyxHQUFHLGlCQUEzQixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxVQUFVLENBQUNNLElBQVgsRUFBUjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUUgsVUFBVSxDQUFDTyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFHQU4sR0FBRyxDQUFDTyxJQUFKLENBQVMsU0FBVCxFQUFvQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNoQ1YsRUFBQUEsRUFBRSxDQUFDVyxJQUFILENBQVFGLEdBQUcsQ0FBQ0csSUFBWjtBQUNBRixFQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBUyw0Q0FBVDtBQUNELENBSEQ7QUFNQSxJQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUVBYixHQUFHLENBQUNjLE1BQUosQ0FBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0JKLElBQS9CLEVBQXFDLFlBQVc7QUFDOUNLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHFCQUFvQk4sSUFBSyxFQUF0QztBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JsdGhvbWFzbWFzdGVyL2dpdGh1Yi9ybEhhY2tzL3Jldmlld1JvdXRlci9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2RhdGFiYXNlL2luZGV4LmpzJyk7XG5cbmxldCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy8uLi9jbGllbnQvZGlzdCcpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpXG5cblxuYXBwLnBvc3QoJy9yZXZpZXcnLCAocmVxLCByZXMpID0+IHtcbiAgZGIuc2F2ZShyZXEuYm9keSk7XG4gIHJlcy5zZW5kKCdkYXRhIGhhcyBiZWVuIHNlbnQgZnJvbSBzZXJ2ZXIgdG8gZGF0YWJhc2UnKVxufSk7XG5cblxubGV0IHBvcnQgPSAzMDAwO1xuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgcG9ydCwgZnVuY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKGBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9YCk7XG59KTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "db",
        "app",
        "use",
        "static",
        "__dirname",
        "json",
        "urlencoded",
        "extended",
        "post",
        "req",
        "res",
        "save",
        "body",
        "send",
        "port",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIG,GAAG,GAAGJ,OAAO,EAAjB;AAEAI,GAAG,CAACC,GAAJ,CAAQL,OAAO,CAACM,MAAR,CAAeC,SAAS,GAAG,iBAA3B,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACM,IAAX,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACO,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAGAN,GAAG,CAACO,IAAJ,CAAS,SAAT,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChCV,EAAAA,EAAE,CAACW,IAAH,CAAQF,GAAG,CAACG,IAAZ;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAAS,4CAAT;AACD,CAHD;AAMA,IAAIC,IAAI,GAAG,IAAX;AAEAb,GAAG,CAACc,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBJ,IAA/B,EAAqC,YAAW;AAC9CK,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBN,IAAK,EAAtC;AACD,CAFD",
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/server",
      "sourcesContent": [
        "const express = require('express');\nconst bodyParser = require('body-parser');\nconst db = require('../database/index.js');\n\nlet app = express();\n\napp.use(express.static(__dirname + '/../client/dist'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }))\n\n\napp.post('/review', (req, res) => {\n  db.save(req.body);\n  res.send('data has been sent from server to database')\n});\n\n\nlet port = 3000;\n\napp.listen(process.env.PORT || port, function() {\n  console.log(`listening on port ${port}`);\n});\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1546037821750
  },
  "{\"sourceRoot\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"filename\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter/database/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"plugins\":[],\"presets\":[]}:7.1.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst config = require('../sensitive.js'); // mongoose.connect('mongodb://localhost/delrealgroup/Reviews');\n\n\nmongoose.connect('mongodb://TheDelRealGroup:' + config.pass + '@ds245357.mlab.com:45357/thedelrealgroup');\nlet db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  console.log('MongoDB has connected');\n});\nlet reviewSchema = {\n  fullName: {\n    type: String,\n    unique: true\n  },\n  experienceRating: String,\n  recommendationRating: String,\n  review: String,\n  marketingConsent: String,\n  improvements: String\n};\nlet Review = mongoose.model('Review', reviewSchema);\n\nfunction save(e) {\n  let obj = new Review({\n    fullName: e.fullName,\n    experienceRating: e.experienceRating,\n    recommendationRating: e.recommendationRating,\n    review: e.review,\n    marketingConsent: e.marketingConsent,\n    improvements: e.improvements\n  });\n  obj.save();\n}\n\nlet funcs = {\n  Review,\n  save\n};\nmodule.exports = funcs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbmZpZyIsImNvbm5lY3QiLCJwYXNzIiwiZGIiLCJjb25uZWN0aW9uIiwib24iLCJjb25zb2xlIiwiZXJyb3IiLCJiaW5kIiwib25jZSIsImxvZyIsInJldmlld1NjaGVtYSIsImZ1bGxOYW1lIiwidHlwZSIsIlN0cmluZyIsInVuaXF1ZSIsImV4cGVyaWVuY2VSYXRpbmciLCJyZWNvbW1lbmRhdGlvblJhdGluZyIsInJldmlldyIsIm1hcmtldGluZ0NvbnNlbnQiLCJpbXByb3ZlbWVudHMiLCJSZXZpZXciLCJtb2RlbCIsInNhdmUiLCJlIiwib2JqIiwiZnVuY3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQXRCLEMsQ0FDQTs7O0FBQ0FELFFBQVEsQ0FBQ0csT0FBVCxDQUFpQiwrQkFBK0JELE1BQU0sQ0FBQ0UsSUFBdEMsR0FBNkMsMENBQTlEO0FBRUEsSUFBSUMsRUFBRSxHQUFHTCxRQUFRLENBQUNNLFVBQWxCO0FBQ0FELEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLE9BQU4sRUFBZUMsT0FBTyxDQUFDQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJGLE9BQW5CLEVBQTRCLG1CQUE1QixDQUFmO0FBQ0FILEVBQUUsQ0FBQ00sSUFBSCxDQUFRLE1BQVIsRUFBZ0IsWUFBVztBQUN6QkgsRUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksdUJBQVo7QUFDRCxDQUZEO0FBSUEsSUFBSUMsWUFBWSxHQUFJO0FBQ2xCQyxFQUFBQSxRQUFRLEVBQUU7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLE1BQU0sRUFBRTtBQUF2QixHQURRO0FBRWxCQyxFQUFBQSxnQkFBZ0IsRUFBRUYsTUFGQTtBQUdsQkcsRUFBQUEsb0JBQW9CLEVBQUVILE1BSEo7QUFJbEJJLEVBQUFBLE1BQU0sRUFBRUosTUFKVTtBQUtsQkssRUFBQUEsZ0JBQWdCLEVBQUVMLE1BTEE7QUFNbEJNLEVBQUFBLFlBQVksRUFBRU47QUFOSSxDQUFwQjtBQVNBLElBQUlPLE1BQU0sR0FBR3ZCLFFBQVEsQ0FBQ3dCLEtBQVQsQ0FBZSxRQUFmLEVBQXlCWCxZQUF6QixDQUFiOztBQUVBLFNBQVNZLElBQVQsQ0FBY0MsQ0FBZCxFQUFpQjtBQUNmLE1BQUlDLEdBQUcsR0FBRyxJQUFJSixNQUFKLENBQVc7QUFDbkJULElBQUFBLFFBQVEsRUFBRVksQ0FBQyxDQUFDWixRQURPO0FBRW5CSSxJQUFBQSxnQkFBZ0IsRUFBRVEsQ0FBQyxDQUFDUixnQkFGRDtBQUduQkMsSUFBQUEsb0JBQW9CLEVBQUVPLENBQUMsQ0FBQ1Asb0JBSEw7QUFJbkJDLElBQUFBLE1BQU0sRUFBRU0sQ0FBQyxDQUFDTixNQUpTO0FBS25CQyxJQUFBQSxnQkFBZ0IsRUFBRUssQ0FBQyxDQUFDTCxnQkFMRDtBQU1uQkMsSUFBQUEsWUFBWSxFQUFFSSxDQUFDLENBQUNKO0FBTkcsR0FBWCxDQUFWO0FBUUFLLEVBQUFBLEdBQUcsQ0FBQ0YsSUFBSjtBQUVEOztBQUdELElBQUlHLEtBQUssR0FBRztBQUFFTCxFQUFBQSxNQUFGO0FBQVVFLEVBQUFBO0FBQVYsQ0FBWjtBQUNBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLEtBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ybHRob21hc21hc3Rlci9naXRodWIvcmxIYWNrcy9yZXZpZXdSb3V0ZXIvZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBjb25maWcgPSByZXF1aXJlKCcuLi9zZW5zaXRpdmUuanMnKTtcbi8vIG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3QvZGVscmVhbGdyb3VwL1Jldmlld3MnKTtcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9UaGVEZWxSZWFsR3JvdXA6JyArIGNvbmZpZy5wYXNzICsgJ0BkczI0NTM1Ny5tbGFiLmNvbTo0NTM1Ny90aGVkZWxyZWFsZ3JvdXAnKVxuXG5sZXQgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xuZGIub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yOicpKTtcbmRiLm9uY2UoJ29wZW4nLCBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJ01vbmdvREIgaGFzIGNvbm5lY3RlZCcpO1xufSk7XG5cbmxldCByZXZpZXdTY2hlbWEgPSAoe1xuICBmdWxsTmFtZToge3R5cGU6IFN0cmluZywgdW5pcXVlOiB0cnVlfSxcbiAgZXhwZXJpZW5jZVJhdGluZzogU3RyaW5nLFxuICByZWNvbW1lbmRhdGlvblJhdGluZzogU3RyaW5nLFxuICByZXZpZXc6IFN0cmluZyxcbiAgbWFya2V0aW5nQ29uc2VudDogU3RyaW5nLFxuICBpbXByb3ZlbWVudHM6IFN0cmluZ1xufSk7XG5cbmxldCBSZXZpZXcgPSBtb25nb29zZS5tb2RlbCgnUmV2aWV3JywgcmV2aWV3U2NoZW1hKVxuXG5mdW5jdGlvbiBzYXZlKGUpIHtcbiAgbGV0IG9iaiA9IG5ldyBSZXZpZXcoe1xuICAgIGZ1bGxOYW1lOiBlLmZ1bGxOYW1lLFxuICAgIGV4cGVyaWVuY2VSYXRpbmc6IGUuZXhwZXJpZW5jZVJhdGluZyxcbiAgICByZWNvbW1lbmRhdGlvblJhdGluZzogZS5yZWNvbW1lbmRhdGlvblJhdGluZyxcbiAgICByZXZpZXc6IGUucmV2aWV3LFxuICAgIG1hcmtldGluZ0NvbnNlbnQ6IGUubWFya2V0aW5nQ29uc2VudCxcbiAgICBpbXByb3ZlbWVudHM6IGUuaW1wcm92ZW1lbnRzXG4gIH0pO1xuICBvYmouc2F2ZSgpXG5cbn1cblxuXG5sZXQgZnVuY3MgPSB7IFJldmlldywgc2F2ZSB9XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmNzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "config",
        "connect",
        "pass",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "reviewSchema",
        "fullName",
        "type",
        "String",
        "unique",
        "experienceRating",
        "recommendationRating",
        "review",
        "marketingConsent",
        "improvements",
        "Review",
        "model",
        "save",
        "e",
        "obj",
        "funcs",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB,C,CACA;;;AACAD,QAAQ,CAACG,OAAT,CAAiB,+BAA+BD,MAAM,CAACE,IAAtC,GAA6C,0CAA9D;AAEA,IAAIC,EAAE,GAAGL,QAAQ,CAACM,UAAlB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAW;AACzBH,EAAAA,OAAO,CAACI,GAAR,CAAY,uBAAZ;AACD,CAFD;AAIA,IAAIC,YAAY,GAAI;AAClBC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GADQ;AAElBC,EAAAA,gBAAgB,EAAEF,MAFA;AAGlBG,EAAAA,oBAAoB,EAAEH,MAHJ;AAIlBI,EAAAA,MAAM,EAAEJ,MAJU;AAKlBK,EAAAA,gBAAgB,EAAEL,MALA;AAMlBM,EAAAA,YAAY,EAAEN;AANI,CAApB;AASA,IAAIO,MAAM,GAAGvB,QAAQ,CAACwB,KAAT,CAAe,QAAf,EAAyBX,YAAzB,CAAb;;AAEA,SAASY,IAAT,CAAcC,CAAd,EAAiB;AACf,MAAIC,GAAG,GAAG,IAAIJ,MAAJ,CAAW;AACnBT,IAAAA,QAAQ,EAAEY,CAAC,CAACZ,QADO;AAEnBI,IAAAA,gBAAgB,EAAEQ,CAAC,CAACR,gBAFD;AAGnBC,IAAAA,oBAAoB,EAAEO,CAAC,CAACP,oBAHL;AAInBC,IAAAA,MAAM,EAAEM,CAAC,CAACN,MAJS;AAKnBC,IAAAA,gBAAgB,EAAEK,CAAC,CAACL,gBALD;AAMnBC,IAAAA,YAAY,EAAEI,CAAC,CAACJ;AANG,GAAX,CAAV;AAQAK,EAAAA,GAAG,CAACF,IAAJ;AAED;;AAGD,IAAIG,KAAK,GAAG;AAAEL,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAZ;AACAI,MAAM,CAACC,OAAP,GAAiBF,KAAjB",
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/database",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst config = require('../sensitive.js');\n// mongoose.connect('mongodb://localhost/delrealgroup/Reviews');\nmongoose.connect('mongodb://TheDelRealGroup:' + config.pass + '@ds245357.mlab.com:45357/thedelrealgroup')\n\nlet db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  console.log('MongoDB has connected');\n});\n\nlet reviewSchema = ({\n  fullName: {type: String, unique: true},\n  experienceRating: String,\n  recommendationRating: String,\n  review: String,\n  marketingConsent: String,\n  improvements: String\n});\n\nlet Review = mongoose.model('Review', reviewSchema)\n\nfunction save(e) {\n  let obj = new Review({\n    fullName: e.fullName,\n    experienceRating: e.experienceRating,\n    recommendationRating: e.recommendationRating,\n    review: e.review,\n    marketingConsent: e.marketingConsent,\n    improvements: e.improvements\n  });\n  obj.save()\n\n}\n\n\nlet funcs = { Review, save }\nmodule.exports = funcs;"
      ]
    },
    "sourceType": "module",
    "mtime": 1545349295298
  },
  "{\"sourceRoot\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"filename\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter/sensitive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rlthomasmaster/github/rlHacks/reviewRouter\",\"plugins\":[],\"presets\":[]}:7.1.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/sensitive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/sensitive.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/rlthomasmaster/github/rlHacks/reviewRouter/sensitive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
        "sourceFileName": "sensitive.js"
      }
    },
    "ast": null,
    "code": "let pass = {\n  pass: 'Delreal1'\n};\nmodule.exports = pass;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbnNpdGl2ZS5qcyJdLCJuYW1lcyI6WyJwYXNzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSSxHQUFHO0FBQ1BBLEVBQUFBLElBQUksRUFBRTtBQURDLENBQVg7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmx0aG9tYXNtYXN0ZXIvZ2l0aHViL3JsSGFja3MvcmV2aWV3Um91dGVyIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHBhc3MgPSB7XG4gICAgcGFzczogJ0RlbHJlYWwxJ1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhc3MiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sensitive.js"
      ],
      "names": [
        "pass",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,IAAI,GAAG;AACPA,EAAAA,IAAI,EAAE;AADC,CAAX;AAIAC,MAAM,CAACC,OAAP,GAAiBF,IAAjB",
      "sourceRoot": "/Users/rlthomasmaster/github/rlHacks/reviewRouter",
      "sourcesContent": [
        "let pass = {\n    pass: 'Delreal1'\n}\n\nmodule.exports = pass"
      ]
    },
    "sourceType": "module",
    "mtime": 1545273541248
  }
}